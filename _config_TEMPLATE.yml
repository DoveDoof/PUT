# Config file for executing policy_gradient.py
# for yml syntax, see https://en.wikipedia.org/wiki/YAML#Design
# install with: pip install PyYAML
# IMPORTANT: scientific float notation needs a dot otherwise it gets interpreted as a string
# incorrect: 1e-3, correct: 1.e-3


# path to save the network file (can be same as load_network_file_path)
save_network_file_path: networks/test/net.p
# path to load a network file (change to continue training existing network, none otherwise)
load_network_file_path: null

# total number of games to train
number_of_games: 10000
# every how many games to do a parameter update?
batch_size: 1000
# after how many games to print the results (e.g. multiple of batch_size)
print_results_every: 1000
# learning rate
learn_rate: 1.e-3
# Determines what fraction of moves are random. eps = 0. is fully deterministic/stochastically, while eps = 1. is fully random
eps: 0.1
# Determines whether the moves are deterministic or stochastic. True is deterministic, False is stochastic
deterministic: True

# --------------------- Historic ------------------------------
historic: False
# change opponent's network with more recently updated network when winrate X is achieved
update_opponent_winrate: 0.65
# number of times the winrate needs to exceed update_opponent_winrate
min_win_ticks: 3
# path to save the historic network
historic_network_base_path: networks/test/hist

# --------------------- Network structure ---------------------
cnn_on: True

# structure of regular neural network
hidden_layers: !!python/tuple [90, 90, 90]

# structure of convolutional neural network
number_of_cnnlayers: 3
filter_shape: [3, 3] # Length and width of filter
filter_depth: 100 # How different 'features' are we trying to learn
dense_width: [] # Number of nodes in layers after the CNN